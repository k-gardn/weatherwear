buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.weather'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// querydsl 라이브러리
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta" // 기존에는 그냥 jpa, 3 버전 이상은 :jakarta 추가
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	// apt(annotation processing tool), Q도메인 생성. 컴파일 시에만 사용됨
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-sql"
	compileOnly "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

	// Spring Security 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// modelMapper: DTO 와 엔티티 간 변환 처리해주는 라이브러리
	implementation 'org.modelmapper:modelmapper:3.1.1'

	implementation 'org.apache.logging.log4j:log4j-api:2.20.0' // Use the latest version
	implementation 'org.apache.logging.log4j:log4j-core:2.20.0' // Use the latest version


	// 기존 롬복 이외도, jakarta 와 querydsl 어노테이션 추가 (spring boot 3.0 이상은 jakarta 대신 jakarta 사용)
	annotationProcessor(
			"org.projectlombok:lombok",
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"); // querydsl-apt:jpa -> querydsl-apt:jakarta


}

tasks.named('test') {
	useJUnitPlatform()
}
