plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.weather'
version = '0.0.1-SNAPSHOT'

def queryDslVersion = "5.0.0"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude module: 'spring-boot-starter-logging'	// SQL 쿼리를 타입 안전하게 작성하게 해주는 라이브러리
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Database Driver
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL
//	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	compileOnly "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

	// Jakarta Annotation
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// ModelMapper
	// DTO �� Entity 변환을 편리하게 자동처리
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// Log4j2 (Spring Boot와 연동)
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

	// YAML 파일 파싱
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1'

	// JWT 인증
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// AWS Lambda
//	implementation 'com.amazonaws.serverless:aws-serverless-java-container-core:1.9.3'

	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Boot Configuration Processor (application.yml 자동완성)
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

tasks.named('test') {
	useJUnitPlatform()
}